name: Rust CI

permissions:
  contents: read
  security-events: read
  actions: read

on:
  push:
    branches: [main]
    tags: [ 'v*' ]
  pull_request:
    branches: [main]

jobs:
  build_and_test:
    name: Test on Rust ${{ matrix.rust-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: [stable] # You can add more versions like 'beta', 'nightly', or specific versions '1.70.0'

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49
        with:
          egress-policy: audit # Configure as needed, 'audit' is a good start

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 2

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2
        with:
          toolchain: ${{ matrix.rust-version }}
          components: clippy, rustfmt

      - name: Cache Cargo dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            # Cache the target directory to speed up subsequent builds
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install additional Rust tools
        run: |
          cargo install cargo-audit --force
          cargo install cargo-tarpaulin --version 0.32.7 --force

      - name: Run security audit
        run: cargo audit

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Lint code
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --all-features --verbose

      - name: Generate code coverage (Tarpaulin)
        run: |
          cargo tarpaulin --verbose --all-features --workspace --engine Llvm --out Xml --output-dir target/tarpaulin
          # Tarpaulin by default creates cobertura.xml in the output directory

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        if: matrix.rust-version == 'stable'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: target/tarpaulin/cobertura.xml
